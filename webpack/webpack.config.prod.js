var webpack = require('webpack');
var HtmlWebpackPlugin = require('html-webpack-plugin');
var ExtractTextPlugin = require("extract-text-webpack-plugin");
var CleanWebpackPlugin = require('clean-webpack-plugin')
var defaults = require('./webpack.config.common')
var validate = require('webpack-validator')

var config = Object.create(defaults.config);
var PATHS = defaults.paths

const HOST = process.env.HOST || "0.0.0.0";
const PORT = process.env.PORT || "3000";

Object.assign(config, {

	entry: {
		main: PATHS.entry
	},
	module: {
		loaders: [{
			test: /\.jsx?$/,
			exclude: /(node_modules|bower_components)/,
			loaders: ['babel'],
		}, {
			test: /\.css$/,
			loader: ExtractTextPlugin.extract('style', 'css!postcss')
		}, {
			test: /\.less$/,
			loader: ExtractTextPlugin.extract('style', 'css!postcss!less')
		}].concat(require('./webpack.config.loaders'))
	},
	devServer: {
		contentBase: PATHS.build,
		noInfo: true, //  --no-info option
		compress: true,
		port: PORT,
		host: HOST
	},
	plugins: [
		new webpack.optimize.UglifyJsPlugin({ // Optimize the JavaScript...
			compress: {
				warnings: false // ...but do not show warnings in the console (there is a lot of them)
			}
		}),
	    new webpack.optimize.OccurenceOrderPlugin(),
	    new webpack.optimize.DedupePlugin(),
		new ExtractTextPlugin("[name].[chunkhash].css"),
		new webpack.optimize.CommonsChunkPlugin("shared.[chunkhash].js"),
		new HtmlWebpackPlugin({
			template: PATHS.index, // Move the index.html file...
			minify: { // Minifying it while it is parsed
				removeComments: true,
				collapseWhitespace: true,
				removeRedundantAttributes: true,
				useShortDoctype: true,
				removeEmptyAttributes: true,
				removeStyleLinkTypeAttributes: true,
				keepClosingSlash: true,
				minifyJS: true,
				minifyCSS: true,
				minifyURLs: true
			},
			inject: true // inject all files that are generated by webpack, e.g. bundle.js, main.css with the correct HTML tags
		}),
		new webpack.DefinePlugin({
			"process.env": {
				NODE_ENV: JSON.stringify("production")
			}
		}),
		new CleanWebpackPlugin([PATHS.build], PATHS.root)
	]

});

module.exports = validate(config)